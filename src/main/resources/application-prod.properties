# Production profile configuration

# Server Configuration
server.port=${PORT:8080}

# PostgreSQL Database for production
spring.datasource.url=${JDBC_DATABASE_URL:${SPRING_DATASOURCE_URL}}
spring.datasource.username=${JDBC_DATABASE_USERNAME:${SPRING_DATASOURCE_USERNAME}}
spring.datasource.password=${JDBC_DATABASE_PASSWORD:${SPRING_DATASOURCE_PASSWORD}}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Database SSL Configuration
spring.datasource.hikari.data-source-properties.ssl=true
spring.datasource.hikari.data-source-properties.sslmode=require

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=2
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=30000
spring.datasource.hikari.register-mbeans=true
spring.datasource.hikari.pool-name=CryptoChatPool

# Health Check Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when_authorized
management.health.db.enabled=true

# Production CORS settings (strict)
spring.web.cors.allowed-origins=https://cryptochat.us.com
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=Authorization,Content-Type
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600

# Disable Swagger UI in production
springdoc.swagger-ui.enabled=false

# SSL Configuration is handled by Render
server.ssl.enabled=false
